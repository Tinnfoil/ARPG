package ARPG;

import java.awt.Point;
import java.util.ArrayList;
import java.util.Random;

public class BlockMap {
	Play p;
	int[][] map;
	int[][] gridmap;
	String[][] codemap;
	int scale;
	int startx;
	int starty;
	public BlockMap(int x, int y, int width, int height, Play p){
		map= new int[width][height];
		codemap= new String[width][height];
		//fillArray(codemap);
		scale=60;//100
		for(int i=0;i<width;i++){
			for(int j=0;j<height;j++){
				map[i][j]=0;
				codemap[i][j]="FILLED";
			}			
		}
		startx=x;
		starty=y;
		this.p=p;
	}
	
	public int getScale(){
		return scale;
	}
	
	
	public void fillArray(int[][] array){
		for(int i=0;i<array.length;i++){
			for(int j=0;j<array[0].length;j++){
				array[i][j]=0;
			}
		}
	}
	
	public void fillArray(String[][] c){
		for(int i=0;i<c.length;i++){
			for(int j=0;j<c[0].length;j++){
				c[i][j]="FILLED";
			}
		}
	}
	
	public Block getBlock(int x, int y){
		//int i=(int)getMapPos(x,y).getX();
		//int j=(int)getMapPos(x,y).getY();
		Block b= new Block(0,0,0,0);
		return b;
	}
	
	public int random(int num){
		Random RN= new Random();
		return RN.nextInt()+1;
	}
	
	/**
	 * Returns map array[][] coords
	 */
	public Point getMapPos(int x, int y){
		int truex=x-startx;
		int truey=y-starty;
		int j=truex/scale;
		int i= truey/scale;
		Point p= new Point(i,j);
		return p;
	}
	
	public boolean openPoint(int x, int y){
		Point p= getMapPos(x,y);
		if((int)p.getX()<map[0].length-1&&(int)p.getX()+1>0&&(int)p.getY()<map.length-1&&(int)p.getY()>1){
			return true;
		}
		return false;
	}
	/**
	 * @return return middle pixel coords of map[][] of specified map coord
	 * getX()=i
	 */
	public Point getPixelPos(int i, int j){
		int x=startx+(i*scale)+(scale/2);
		int y=starty+(j*scale)+(scale/2);		
		Point p= new Point(x,y);
		return p;
	}
	
	public Point getStartPos(){
		for(int j=0;j<codemap[0].length;j++){
			if(codemap[0][j].contains("N")){
				//System.out.println("TRUE"+getPixelPos(j,0).getX()+":"+getPixelPos(j,0).getY());
				return getPixelPos(j*10,0);
			}
		}
		Point p= new Point(0,0);
		return p;
	}
	/**
	public void createMap(int height, int width){
		Random RN= new Random();
		boolean done=false;
		int[] nextCell= new int[2];
		int[][] grid= new int[height][width];
		fillArray(grid);
		int startPos= RN.nextInt(grid[0].length);
		grid[0][startPos]=0;
		nextCell[0]=0;
		nextCell[1]=startPos;
		System.out.println("Start:"+nextCell[0]+","+nextCell[1]);
		int lasti=0;
		int lastj=startPos;
		int num=0;
		while(done==false){
			if((nextCell[0]==-1&&nextCell[1]==-1)||nextCell[0]==height){
				grid[lasti][lastj]=99;
				System.out.println("DONE");
				done=true;
			}
			else{
				grid[nextCell[0]][nextCell[1]]=num;
				num++;
				lasti=nextCell[0];
				lastj=nextCell[1];
				nextCell=randDirection(grid,nextCell[0],nextCell[1]);
			}
		}
		grid[0][startPos]=0;
		map=grid;
		readMap(map);
	}
	*/
	public void createArena(int height, int width){
		gridmap= new int[height][width];
		for(int i=0;i<gridmap.length;i++){
			for(int j=0;j<gridmap[0].length;j++){
				gridmap[i][j]=8;
			}
		}
		map=gridmap;
		codeMap2(gridmap);
		createArena(codemap);
	}
	
	public void createMap(int height, int width){
		boolean creatingmap=true;
		while(creatingmap){
			if(validMap(height,width)==true){
				creatingmap=false;
			}
		}
		map=gridmap;
		for(int i=0;i<gridmap.length;i++){
			for(int j=0;j<gridmap[0].length;j++){
				if(gridmap[i][j]>=10){
					System.out.print(gridmap[i][j]+" ");
				}
				else{
					System.out.print(gridmap[i][j]+"  ");
				}
			}
			System.out.println();
		}
		codeMap2(gridmap);
		createMap(codemap);
	}
	
	public boolean validMap(int height, int width){
		Random RN= new Random();
		boolean done=false;
		boolean valid=false;
		int[] nextCell= new int[2];
		int[][] grid= new int[height][width];
		fillArray(grid);
		int startPos= RN.nextInt(grid[0].length);
		grid[0][startPos]=1;
		nextCell[0]=0;
		nextCell[1]=startPos;
		System.out.println("Start:"+nextCell[0]+","+nextCell[1]);
		int lasti=0;
		int lastj=startPos;
		int num=1;
		while(done==false){
			if(nextCell[0]==height-1){
				grid[lasti][lastj]=num;
				grid[lasti+1][lastj]=num+1;
				valid=true;
				done=true;
			}
			else if((nextCell[0]==-1&&nextCell[1]==-1)){
				grid[lasti][lastj]=num;
				valid=false;
				done=true;
			}
			else{
				grid[nextCell[0]][nextCell[1]]=num;
				num++;
				lasti=nextCell[0];
				lastj=nextCell[1];
				nextCell=randDirection(grid,nextCell[0],nextCell[1]);
			}
		}
		grid[0][startPos]=1;
		gridmap=grid;
		return valid;
	}
	
	public int[] randDirection(int[][] grid, int i, int j){
		Random RN= new Random();
		int[] coords= new int[2];
		coords[0]=i;
		coords[1]=j;
		boolean valid=false;
		while(valid==false){
		int num=RN.nextInt(4)+1;
			if(num==1&&j+1<grid[0].length&&grid[i][j+1]==0){//RIGHT
				coords[0]=i;
				coords[1]=j+1;
				//System.out.println("RIGHT");
				valid=true;
			}
			else if(num==2&&i<grid.length&&grid[i+1][j]==0){//DOWN
				coords[0]=i+1;
				coords[1]=j;
				//System.out.println("DOWN");
				valid=true;
			}
			else if(num==3&&j>0&&grid[i][j-1]==0){//LEFT
				coords[0]=i;
				coords[1]=j-1;
				//System.out.println("LEFT");
				valid=true;
			}
			else if(num==4&&i>0&&grid[i-1][j]==0){//UP
				coords[0]=i-1;
				coords[1]=j;
				//System.out.println("UP");
				valid=true;
			}
			else if(i>=grid.length||j>=grid[0].length||i<0||j<0){
				valid=false;
			}
			else{
				coords[0]=i+1;
				coords[1]=j;
				valid=true;
			}
		}
		return coords;
	}
	
	public void codeMap(int[][] grid){
		codemap= new String[grid.length][grid[0].length];
		fillArray(codemap);
		for(int i=0;i<grid.length;i++){
			for(int j=0;j<grid[0].length;j++){
				if(grid[i][j]>0){
					int num=grid[i][j];
					String code="FFFF";
					if(j+1<grid.length&&grid[i][j+1]==num+1){
						code=replaceChar(code,"N",1);
					}
					else if(i+1<grid.length&&grid[i+1][j]==num+1){
						code=replaceChar(code,"N",2);
					}
					else if(j>0&&grid[i][j-1]==num+1){
						code=replaceChar(code,"N",3);
					}
					else if(i>0&&grid[i-1][j]==num+1){
						code=replaceChar(code,"N",4);
					}
					else{
						
					}
					if(j+1<grid.length&&grid[i][j+1]==num-1){
						code=replaceChar(code,"N",1);
					}
					else if(i+1<grid.length&&grid[i+1][j]==num-1){
						code=replaceChar(code,"N",2);
					}
					else if(j>0&&grid[i][j-1]==num-1){
						code=replaceChar(code,"N",3);
					}
					else if(i>0&&grid[i-1][j]==num-1){
						code=replaceChar(code,"N",4);
					}
					else{
						
					}
					//System.out.println(codemap[i][j]);
					codemap[i][j]=code;
				}
			}
		}
	}
	
	public void codeMap2(int[][] grid){
		codemap= new String[grid.length][grid[0].length];
		fillArray(codemap);
		for(int i=0;i<grid.length;i++){
			for(int j=0;j<grid[0].length;j++){
				if(grid[i][j]>0){
					String code="FFFF";
					if(j+1<grid.length&&grid[i][j+1]>0){
						code=replaceChar(code,"N",1);
					}
					if(i+1<grid.length&&grid[i+1][j]>0){
						code=replaceChar(code,"N",2);
					}
					if(j>0&&grid[i][j-1]>0){
						code=replaceChar(code,"N",3);
					}
					if(i>0&&grid[i-1][j]>0){
						code=replaceChar(code,"N",4);
					}
					//System.out.println(codemap[i][j]);
					codemap[i][j]=code;
				}
			}
		}
	}
	
	public String replaceChar(String str,String s, int index){
		return str.substring(0, index-1)+s+str.substring(index);
	}
	
	/**
	 * 
	 * @param cm (codemap)
	 */
	public void createMap(String[][] cm){
		map= new int[cm.length*10][cm[0].length*10];
		for(int i=0;i<cm.length;i++){
			for(int j=0;j<cm[0].length;j++){
				int[][] blockmap= new int[10][10];
				blockmap=mapBlock(cm[i][j]);
				for(int k=0;k<10;k++){
					for(int l=0;l<10;l++){
						map[(i*10)+k][(j*10)+l]=blockmap[k][l];
					}
				}
			}
		}
	}
	public void createArena(String[][] cm){
		map= new int[cm.length*10][cm[0].length*10];
		for(int i=0;i<cm.length;i++){
			for(int j=0;j<cm[0].length;j++){
				int[][] blockmap= new int[10][10];
				blockmap=arenaBlock(cm[i][j]);
				for(int k=0;k<10;k++){
					for(int l=0;l<10;l++){
						map[(i*10)+k][(j*10)+l]=blockmap[k][l];
					}
				}
			}
		}
	}
	
	public ArrayList<Block> addBlocks(ArrayList<Block> blocks){
		for(Block b:readMap(map)){
			blocks.add(b);
		}
		return blocks;
	}
	
	public ArrayList<Block> readMap(int[][] map){
		ArrayList<Block> blocks = new ArrayList<Block>();
		for(int i=0;i<map.length;i++){
			for(int j=0;j<map[i].length;j++){
				if(map[i][j]==1){
				Block b= new Block(startx+(scale*j),starty+(scale*i),scale,scale);
				blocks.add(b);
				}
			}
		}
		return blocks;
	}
	
	public void printMap(int[][] grid){
		for(int i=0;i<codemap.length;i++){
			for(int j=0;j<codemap[0].length;j++){
				if(codemap[i][j].length()>=6){
					System.out.print(codemap[i][j]);
				}
				else{
					System.out.print(codemap[i][j]+"  ");
				}
			}
			System.out.println();
		}
		for(int i=0;i<map.length;i++){
			for(int j=0;j<map[0].length;j++){
				if(map[i][j]>=10){
					System.out.print(map[i][j]+" ");
				}
				else{
					System.out.print(map[i][j]+"  ");
				}
			}
			System.out.println();
		}
	}
	
	
	public void map2(){//100x40
		map= new int[][]
				{
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				};
	}
	
	public void map3(){		
		map= new int[][]
				{
				{1,1,1,1,1,1,1,1,1,1},
				{1,0,0,0,0,0,0,1,1,1},
				{1,0,0,0,0,0,0,1,1,1},
				{0,0,0,0,0,0,0,0,1,1},
				{0,0,0,0,1,1,0,0,0,0},
				{1,0,0,0,1,1,0,0,0,0},
				{1,0,0,0,0,0,0,0,0,1},
				{1,0,0,0,0,0,0,0,0,1},
				{1,1,0,0,0,0,0,0,0,0},
				{1,1,1,1,0,0,1,1,0,0},
				};
	}
	
	public int[][] mapBlock(String id){
		int[][] temp;
		Random rn= new Random();
		int num=rn.nextInt(3)+1;
		if(id.equals("EMPTY")){
			temp= new int[][]
					{
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					};
		}
		else if(id.equals("FFFF")){
			temp= new int[][]
					{
					{1,1,1,1,1,1,1,1,1,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,0,0,0,0,0,0,0,0,1},
					{1,1,1,1,1,1,1,1,1,1},
					};
			
		}
		else if(id.equals("NNNN")){
			if(num==1){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,1,1,1,1,0,0,0},
						{0,0,0,1,1,1,1,0,0,0},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};	
			}
			else if(num==2){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};		
			}
			else if(num==3){
				temp= new int[][]
						{
						{0,0,1,1,0,0,1,1,0,0},
						{0,1,1,0,0,0,0,1,1,0},
						{1,1,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,0,0,0,0,0,0,1,1},
						{0,1,1,0,0,0,0,1,1,0},
						{0,0,1,1,0,0,1,1,0,0},
						};		
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,0,0,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,1,1,1,1},
						};		
			}
		}
		else if(id.equals("NFFF")){
			if(num==1){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,0,0,0,1,1,1,1},
						{1,1,0,0,0,0,0,1,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,1,0,0,0,0,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,1,0,1},
						{1,0,0,0,0,0,1,1,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("FNFF")){				
			if(num==1){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,1,1,1,0,0,1},
						{1,0,0,0,0,1,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						};
			}else if(num==2){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,0,1,1,1,1,1},
						{1,0,0,0,0,0,1,1,1,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,1,0,0,0,0,0,0,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						};
			}else{temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,1,1,1,1},
						};
			}
		}
		else if(id.equals("FFNF")){
			if(num==1){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}else if(num==2){temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,1,1,1,1,0,0,0,0,1},
						{1,0,1,1,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{1,1,1,0,0,0,0,0,0,1},
						{1,1,1,0,0,0,1,0,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}else{temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}					
		}
		else if(id.equals("FFFN")){
			if(num==1){temp= new int[][]{
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,1,0,0,0,0,1,1},
						{1,0,1,1,0,0,0,1,1,1},
						{1,1,1,1,0,0,0,1,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};	
			}else if(num==2){temp= new int[][]{
						{1,1,1,1,0,0,1,1,1,1},
						{1,0,1,1,0,0,0,0,0,1},
						{1,0,0,1,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,0,0,0,0,1,0,0,1},
						{1,1,1,1,0,0,1,0,0,1},
						{1,1,1,1,0,0,1,1,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};	
			}else{temp= new int[][]{
						{1,1,1,1,0,0,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,1,1,1,1,1,1},
						};							
			}
		}
		else if(id.equals("NNFF")){
			if(num==1){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,1,1,1,0,0,0,0},
						{1,1,1,1,1,1,0,0,0,0},
						{1,1,0,1,1,0,0,0,0,1},
						{1,1,0,0,0,0,0,0,1,1},
						{1,1,0,0,0,0,0,1,1,0},
						{1,1,1,0,0,0,1,1,0,0},
						};
			}else if(num==2){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,1,1},
						{1,1,0,1,1,1,0,0,0,0},
						{1,1,0,0,1,0,0,0,0,0},
						{1,1,0,0,1,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,1,1},
						{1,1,0,0,1,1,1,1,1,1},
						{1,1,0,0,0,1,1,1,1,1},
						{1,1,1,0,0,0,1,1,1,0},
						};
			}else{temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,1,1,1,0,0,0},
						{1,1,0,0,1,1,1,1,1,1},
						{1,1,0,0,0,1,1,1,1,1},
						{1,1,0,0,0,0,1,1,1,1},
						{1,1,0,0,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						};
			}
		}
		else if(id.equals("FNNF")){
			if(num==1){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,1,0,0,1,1},
						{0,0,0,1,1,1,0,0,1,1},
						{1,0,1,1,1,0,0,0,1,1},
						{1,1,1,1,0,0,0,0,1,1},
						{0,1,1,0,0,0,0,1,1,1},
						{0,0,1,1,0,0,1,1,1,1},
						};
			}else if(num==2){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,1,0,0,1,1},
						{0,0,0,0,1,1,1,0,0,1},
						{0,0,0,1,1,1,1,0,0,1},
						{0,0,0,0,0,1,1,1,0,1},
						{0,0,0,0,0,0,1,1,1,1},
						{1,1,0,0,0,0,0,1,1,1},
						{0,1,1,1,0,0,0,0,1,1},
						};
			}
			else{temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,1,1,1,1,0,0,0,1,1},
						{0,0,0,1,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{0,1,1,0,0,0,0,0,1,1},
						{0,1,1,1,0,0,0,0,1,1},
						};
			}
		}
		else if(id.equals("FFNN")){
			if(num==1){temp= new int[][]{
						{0,0,1,1,0,0,1,1,1,1},
						{0,1,1,0,0,0,0,0,0,1},
						{1,1,1,0,0,0,0,0,0,1},
						{1,0,1,1,0,0,0,0,0,1},
						{0,0,0,1,1,0,0,0,1,1},
						{0,0,0,0,1,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,1,0,0,0,0,1,1,1,0},
						{1,1,1,1,1,1,1,1,0,0},
						};
			}else if(num==2){temp= new int[][]{
						{0,1,1,1,1,0,0,0,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,1,1,0,0,0,1,1},
						{0,0,0,1,1,0,0,1,1,1},
						{0,0,0,1,1,1,1,1,1,1},
						{0,0,0,0,1,1,0,0,1,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,1,1,0,0,0,0,0,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};				
			}
			else{temp= new int[][]{
						{0,0,1,0,0,0,0,1,1,0},
						{0,0,1,0,0,0,0,1,1,0},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{1,0,0,0,0,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("NFFN")){
			if(num==1){temp= new int[][]{
						{1,1,0,0,0,0,1,1,1,1},
						{1,0,0,0,0,1,1,0,0,1},
						{1,0,0,0,1,1,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,1,0,0,0,0},
						{1,1,0,0,0,1,1,0,0,1},
						{1,1,1,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,0,1},
						{0,1,1,1,1,1,1,1,1,1},
						};
			}else if(num==2){temp= new int[][]
						{
						{1,1,0,0,0,1,1,1,0,0},
						{1,1,0,0,0,0,0,1,1,0},
						{1,1,0,0,0,0,0,0,1,1},
						{1,1,0,0,1,1,0,0,0,1},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,1,1,1,0,0,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,0},
						};			
			}else{temp= new int[][]{
						{1,1,1,1,0,0,1,1,1,0},
						{1,1,1,0,0,0,0,1,1,0},
						{1,1,0,0,0,1,1,1,1,1},
						{1,1,0,0,1,1,1,1,0,1},
						{1,1,0,1,1,1,1,0,0,0},
						{1,1,0,0,1,1,1,0,0,0},
						{1,1,0,0,0,1,0,0,0,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("NFNF")){
			if(num==1){
				temp= new int[][]
						{
						{0,1,1,1,1,1,1,1,1,0},
						{1,1,0,0,0,0,1,1,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,1,0,0,0,0,0},
						{1,1,0,0,1,1,0,0,0,0},
						{0,1,1,0,0,1,0,0,0,0},
						{0,0,1,0,0,1,1,0,0,1},
						{0,0,0,0,0,0,1,1,0,1},
						{1,0,0,0,0,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{0,1,1,1,1,1,1,1,1,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,1,1,1,1,1,1,1,1,0},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};				
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{0,0,1,1,1,1,1,1,1,1},
						{0,0,0,1,1,1,1,1,1,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("FNFN")){
			if(num==1){
				temp= new int[][]
						{
						{1,1,1,0,0,0,0,1,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,1,0,0,0,0,1,1,1},
						{1,1,0,0,0,0,1,1,1,1},
						{1,1,0,0,0,0,0,1,1,1},
						{1,1,1,0,0,0,0,1,1,1},
						{1,1,1,1,0,0,0,1,1,1},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,0,0,0,1,1,1,1},
						{1,1,1,0,0,1,1,1,1,1},
						{1,1,1,0,0,1,1,1,1,1},
						{1,1,1,0,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						};			
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,0,1,1,1},
						{1,1,1,1,1,0,0,0,1,1},
						{1,1,1,1,1,1,0,0,1,1},
						{1,1,1,1,1,0,0,0,1,1},
						{1,1,1,1,1,0,0,0,1,1},
						{1,1,1,1,0,0,0,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						{1,1,1,1,0,0,1,1,1,1},
						};
			}
		}
		else if(id.equals("FNNN")){
			if(num==1){
				temp= new int[][]
						{
						{0,0,1,1,0,0,0,1,1,1},
						{0,0,1,1,0,0,0,0,1,1},
						{0,0,1,1,0,0,0,0,1,1},
						{0,0,1,0,0,0,0,0,1,1},
						{0,0,1,0,0,0,0,0,1,1},
						{0,0,1,0,0,0,0,0,1,1},
						{0,0,1,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,1,1,1,1,1},
						};	
			}
			else if(num==2){
				temp= new int[][]
						{
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,1,1,1,1,1},
						{0,0,0,0,1,1,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						};
			}
			else{
				temp= new int[][]
						{
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,1,0,0,0,0,0,1,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						};
			}
		}
		else if(id.equals("NFNN")){
			if(num==1){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{1,1,1,1,1,1,1,1,0,0},
						{1,1,1,1,1,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{0,0,1,1,1,1,1,1,1,1},
						{0,0,0,1,1,1,1,1,1,1},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,1,0},
						{1,1,0,0,0,0,0,1,1,1},
						{1,1,1,0,0,0,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};	
			}
			else{
				temp= new int[][]
						{
						{0,0,0,1,1,1,1,0,0,0},
						{0,0,0,0,1,1,1,0,0,0},
						{0,0,0,0,0,1,1,1,0,0},
						{0,0,0,0,0,0,0,1,1,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,1,1},
						{1,1,0,0,0,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("NNFN")){
			if(num==1){
				temp= new int[][]
						{
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{0,0,1,0,0,0,0,0,0,0},
						{0,0,1,1,0,0,0,0,0,0},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,1,1,1,1,1},
						{1,0,0,0,0,1,1,1,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,0},
						};
			}
			else{
				temp= new int[][]
						{
						{1,1,1,0,0,0,0,1,0,0},
						{1,1,0,0,0,0,1,1,1,0},
						{1,1,0,0,0,0,1,1,1,1},
						{1,1,0,0,0,0,0,1,1,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,1,0,0,0,0,1,1,0},
						{1,1,1,0,0,0,1,1,0,0},
						};	
			}
		}
		else if(id.equals("NNNF")){
			if(num==1){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,0,1,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,1,0,0,0,0,1},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,0,0,1,0,0,0,0},
						{0,0,0,0,0,1,0,0,0,0},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,1,1,1,1,0,0,0},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,0,0,0,0,0,0,0,1},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,1,1,0,0,0,0,0},
						{1,0,1,1,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,1,1},
						{0,1,1,0,0,0,0,1,1,1},
						{0,0,1,1,0,0,1,1,1,0},
						};
			}
			if(num==1){
				
			}
			else if(num==2){
				
			}
			else{
				
			}
		}
		else{//FILLED
			temp= new int[][]
					{
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1},
					};
		}
		return temp;
	}

	public int[][] arenaBlock(String id){
		int[][] temp;
		Random rn= new Random();
		int num=rn.nextInt(3)+1;
		if(id.equals("NNNN")){
			num=rn.nextInt(5)+1;
			if(num==1){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,1,0,0,0,0},
						{0,0,0,0,1,1,1,0,0,0},
						{0,0,0,1,1,1,0,0,0,0},
						{0,0,0,0,1,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};	
			}
			else if(num==2){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,1,0,0,0,0,0,0,0},
						{0,0,1,1,0,0,0,0,0,0},
						{0,0,1,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,1,1,0},
						{0,0,0,0,0,0,1,1,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};		
			}
			else if(num==3){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,0,0,0,0,1,1,1,0},
						{0,0,0,0,0,1,1,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};		
			}
			else if(num==4){
				temp= new int[][]
						{
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,0,1,0,0,0,0,0},
						{0,0,0,0,1,0,0,0,0,0},
						{0,0,0,0,1,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,1,0,0,0,0},
						{0,0,0,0,0,1,0,0,0,0},
						{0,0,0,0,1,1,0,0,0,0},
						{0,0,0,0,1,0,0,0,0,0},
						};		
			}
			else if(num==5){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};		
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,0,0,1,1,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,1,1,1,1},
						};		
			}
		}
		else if(id.equals("NNFF")){
			if(num==1){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,1,1,1,0,0,0,0},
						{1,1,1,1,1,1,0,0,0,0},
						{1,1,0,1,1,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						};
			}else if(num==2){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,1,1},
						{1,1,0,1,1,1,0,0,0,0},
						{1,1,0,0,1,0,0,0,0,0},
						{1,1,0,0,1,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						};
			}else{temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,0},
						};
			}
		}
		else if(id.equals("FNNF")){
			if(num==1){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						};
			}else if(num==2){temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,1,1,1,0,0,1},
						{0,0,0,1,1,1,1,0,0,1},
						{0,0,0,0,0,1,1,1,0,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						};
			}
			else{temp= new int[][]{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,1,1,1,1,1,0,0,0,1},
						{1,1,1,1,1,0,0,0,1,1},
						{0,0,0,1,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						};
			}
		}
		else if(id.equals("FFNN")){
			if(num==1){temp= new int[][]{
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,1,1,1},
						{1,1,0,0,0,0,1,1,1,0},
						{1,1,1,1,1,1,1,1,0,0},
						};
			}else if(num==2){temp= new int[][]{
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,1,1,0,0,0,1,1},
						{0,0,0,1,1,0,0,1,1,1},
						{0,0,0,1,1,1,1,1,1,1},
						{0,0,0,0,1,1,1,1,1,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,1,1,0,0,0,0,0,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};				
			}
			else{temp= new int[][]{
						{0,0,0,0,0,0,0,1,1,0},
						{0,0,0,0,0,0,0,1,1,0},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{1,0,0,0,0,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("NFFN")){
			if(num==1){temp= new int[][]{
						{1,1,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,1,1},
						{0,1,1,1,1,1,1,1,1,1},
						};
			}else if(num==2){temp= new int[][]
						{
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,1,1,1,0,0,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};			
			}else{temp= new int[][]{
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,1},
						{1,1,1,1,0,0,0,0,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("FNNN")){
			if(num==1){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,1,1,1,1,1},
						};	
			}
			else if(num==2){
				temp= new int[][]
						{
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,1,1,1,1,1},
						{0,0,0,0,1,1,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						};
			}
			else{
				temp= new int[][]
						{
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,0,1,1,1},
						{0,0,0,0,0,0,1,1,1,1},
						};
			}
		}
		else if(id.equals("NFNN")){
			if(num==1){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,1,0},
						{1,1,0,0,0,0,0,1,1,1},
						{1,1,1,0,0,0,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};	
			}
			else{
				temp= new int[][]
						{
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,1,1},
						{1,1,0,0,0,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						};
			}
		}
		else if(id.equals("NNFN")){
			if(num==1){
				temp= new int[][]
						{
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,0},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,0,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,1,0,0,0,0,0,0},
						};
			}
			else{
				temp= new int[][]
						{
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,0,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						{1,1,1,0,0,0,0,0,0,0},
						};	
			}
		}
		else if(id.equals("NNNF")){
			if(num==1){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,0,1,1,1},
						{1,0,0,0,0,0,0,0,1,1},
						{1,0,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};
			}
			else if(num==2){
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,0,0,0,0,0,0,1,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};
			}
			else{
				temp= new int[][]
						{
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,1,1,1,1,1,1,1},
						{1,1,1,0,0,0,0,0,1,1},
						{1,1,0,0,0,0,0,0,0,1},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						{0,0,0,0,0,0,0,0,0,0},
						};
			}
		}
		else{
			temp= new int[][]
					{
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					{0,0,0,0,0,0,0,0,0,0},
					};	
		}
		return temp;
	}

}
